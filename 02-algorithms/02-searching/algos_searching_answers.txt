1. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using linear search?

  7 iterations

2. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using binary search?

  3 iterations

3. Calculate fib(10), fib(11), fib(12) by hand.

  0, 1, (0+1) 1, (1+1) 2, (1+2) 3, (2+3) 5, (3+5) 8, (5+8) 13, (8+13) 21, (13+21) 34, (21+34) 55, 89 (34+55)
  fib(10) = 34
  fib(11) = 55
  fib(12) = 89

4. Benchmark for iterative vs recursive fibonacci:

***fib(20)***
       user     system      total        real
Iterative  0.000000   0.000000   0.000000 (  0.000008)
Recursive  0.000000   0.000000   0.000000 (  0.000006)

5. Given an unsorted collection of a million items, which algorithm would you choose between linear search and binary search? Would you use an iterative or recursive solution? Explain your reasoning.

  I would choose a linear search. Since the collection is unsorted, the search may not be able to find the target value in a binary search.

6. Given a sorted collection of a million items, which algorithm would you choose between linear search and binary search? Would you use an iterative or recursive solution? Explain your reasoning.

  I would use a binary, recursive searching algorithm. A binary search will decrease the amount of iterations to find the target value and a recursive search is slightly quicker than an iterative search. For maximum optimization, a binary, recursive search would be the best choice. 
